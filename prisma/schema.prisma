// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String
  password  String
  email     String      @unique
  phone     String      @unique
  status    Boolean
  createdAt DateTime?   @default(now())
  updatedAt DateTime?   @default(now())

  appointments Appointment[]
}

model Barber {
  id        Int         @id @default(autoincrement())
  name      String
  password  String
  email     String      @unique
  phone     String      @unique
  status    Boolean
  createdAt DateTime?   @default(now())
  updatedAt DateTime?   @default(now())

  appointments Appointment[]
  services     Service[] @relation("BarberServices")
}

model Service {
  id        Int         @id @default(autoincrement())
  name      String
  price     Float
  duration  Int
  createdAt DateTime?   @default(now())
  updatedAt DateTime?   @default(now())

  appointments Appointment[]
  barbers      Barber[] @relation("BarberServices")
}


model Appointment {
  id        Int       @id @default(autoincrement())
  userId    Int
  barberId  Int
  serviceId Int
  date      DateTime
  status    String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  user    User    @relation(fields: [userId], references: [id])
  barber  Barber  @relation(fields: [barberId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}
